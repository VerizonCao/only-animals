{"ast":null,"code":"import{useState}from'react';import{useParams,Link}from'react-router-dom';import'./ChatPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatPage(){const{animal}=useParams();const[message,setMessage]=useState('');const[chatHistory,setChatHistory]=useState([]);const handleSubmit=e=>{e.preventDefault();if(message.trim()){const newMessage={text:message,sender:'user',timestamp:new Date().toLocaleTimeString()};// Add user message and simulate animal response\nsetChatHistory([...chatHistory,newMessage,{text:`${animal} says: Meow/Woof/Whatever!`,sender:'animal',timestamp:new Date().toLocaleTimeString()}]);setMessage('');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"back-button\",children:\"\\u2190 Back\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Chat with \",animal]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-history\",children:chatHistory.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${msg.sender}`,children:[/*#__PURE__*/_jsx(\"p\",{children:msg.text}),/*#__PURE__*/_jsx(\"span\",{className:\"timestamp\",children:msg.timestamp})]},index))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:e=>setMessage(e.target.value),placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]})]});}export default ChatPage;","map":{"version":3,"names":["useState","useParams","Link","jsx","_jsx","jsxs","_jsxs","ChatPage","animal","message","setMessage","chatHistory","setChatHistory","handleSubmit","e","preventDefault","trim","newMessage","text","sender","timestamp","Date","toLocaleTimeString","className","children","to","map","msg","index","onSubmit","type","value","onChange","target","placeholder"],"sources":["/Users/caoye/git/onlyfan-app/frontend/myfrontend/src/components/ChatPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './ChatPage.css';\n\nfunction ChatPage() {\n  const { animal } = useParams();\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (message.trim()) {\n      const newMessage = {\n        text: message,\n        sender: 'user',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      \n      // Add user message and simulate animal response\n      setChatHistory([...chatHistory, newMessage, {\n        text: `${animal} says: Meow/Woof/Whatever!`,\n        sender: 'animal',\n        timestamp: new Date().toLocaleTimeString()\n      }]);\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <Link to=\"/\" className=\"back-button\">‚Üê Back</Link>\n        <h2>Chat with {animal}</h2>\n      </div>\n      \n      <div className=\"chat-history\">\n        {chatHistory.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            <p>{msg.text}</p>\n            <span className=\"timestamp\">{msg.timestamp}</span>\n          </div>\n        ))}\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Type your message...\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatPage; "],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,SAAS,CAAEC,IAAI,KAAQ,kBAAkB,CAClD,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExB,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,KAAM,CAAEC,MAAO,CAAC,CAAGP,SAAS,CAAC,CAAC,CAC9B,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAElD,KAAM,CAAAa,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAIN,OAAO,CAACO,IAAI,CAAC,CAAC,CAAE,CAClB,KAAM,CAAAC,UAAU,CAAG,CACjBC,IAAI,CAAET,OAAO,CACbU,MAAM,CAAE,MAAM,CACdC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAC3C,CAAC,CAED;AACAV,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEM,UAAU,CAAE,CAC1CC,IAAI,CAAE,GAAGV,MAAM,4BAA4B,CAC3CW,MAAM,CAAE,QAAQ,CAChBC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAC3C,CAAC,CAAC,CAAC,CACHZ,UAAU,CAAC,EAAE,CAAC,CAChB,CACF,CAAC,CAED,mBACEJ,KAAA,QAAKiB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BlB,KAAA,QAAKiB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpB,IAAA,CAACF,IAAI,EAACuB,EAAE,CAAC,GAAG,CAACF,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,aAAM,CAAM,CAAC,cAClDlB,KAAA,OAAAkB,QAAA,EAAI,YAAU,CAAChB,MAAM,EAAK,CAAC,EACxB,CAAC,cAENJ,IAAA,QAAKmB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1Bb,WAAW,CAACe,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBAC1BtB,KAAA,QAAiBiB,SAAS,CAAE,WAAWI,GAAG,CAACR,MAAM,EAAG,CAAAK,QAAA,eAClDpB,IAAA,MAAAoB,QAAA,CAAIG,GAAG,CAACT,IAAI,CAAI,CAAC,cACjBd,IAAA,SAAMmB,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAEG,GAAG,CAACP,SAAS,CAAO,CAAC,GAF1CQ,KAGL,CACN,CAAC,CACC,CAAC,cAENtB,KAAA,SAAMuB,QAAQ,CAAEhB,YAAa,CAACU,SAAS,CAAC,YAAY,CAAAC,QAAA,eAClDpB,IAAA,UACE0B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEtB,OAAQ,CACfuB,QAAQ,CAAGlB,CAAC,EAAKJ,UAAU,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CAC5CG,WAAW,CAAC,sBAAsB,CACnC,CAAC,cACF9B,IAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAAAN,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC/B,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAjB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}